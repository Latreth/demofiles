<?xml version="1.0" encoding="utf-8"?>

<?xml-stylesheet type="text/xsl" href="exemple-11.xsl"?>

<page>
 <titre>XML</titre>
 <sous-titre>From Wikipedia, the free encyclopedia</sous-titre>
 <bloc>
In computing, Extensible Markup Language (XML) is a markup language that defines a set of rules for encoding documents in a format that is both human-readable and machine-readable. The W3C's XML 1.0 Specification and several other related specifications, —all of them free open standards— define XML.
 </bloc>
 <bloc>
The design goals of XML emphasize simplicity, generality, and usability across the Internet. It is a textual data format with strong support via Unicode for different human languages. Although the design of XML focuses on documents, the language is widely used for the representation of arbitrary data structures such as those used in web services.
 </bloc>
 <bloc>
Several schema systems exist to aid in the definition of XML-based languages, while programmers have developed many application programming interfaces (APIs) to aid the processing of XML data.
 </bloc>

 <paragraphe titre="Applications of XML">
 <bloc>
As of 2009, 100 document formats using XML syntax had been developed, including RSS, Atom, SOAP, and XHTML. XML-based formats became the default for many office-productivity tools, including Microsoft Office (Office Open XML), OpenOffice.org and LibreOffice (OpenDocument), and Apple's iWork. XML has also provided the base language for communication protocols such as XMPP. Applications for the Microsoft .NET Framework use XML files for configuration. Apple has an implementation of a registry based on XML.
 </bloc>
 <bloc>
XML has come into common use for the interchange of data over the Internet. IETF RFC 7303 gives rules for the construction of Internet Media Types for use when sending XML. It also defines the media types application/xml and text/xml, which say only that the data is in XML, and nothing about its semantics. The use of text/xml has been criticized as a potential source of encoding problems and it has been suggested that it should be deprecated.
 </bloc>
 <bloc>
RFC 7303 also recommends that XML-based languages be given media types ending in +xml; for example image/svg+xml for SVG.
 </bloc>
 <bloc>
Further guidelines for the use of XML in a networked context appear in RFC 3470, also known as IETF BCP 70, a document covering many aspects of designing and deploying an XML-based language.
 </bloc>
 </paragraphe>

 <paragraphe titre="Key terminology">
 <bloc>
The material in this section is based on the XML Specification. This is not an exhaustive list of all the constructs that appear in XML; it provides an introduction to the key constructs most often encountered in day-to-day use.
 </bloc>
 <bloc titre="Character">
    An XML document is a string of characters. Almost every legal Unicode character may appear in an XML document.
 </bloc>
 <bloc titre="Processor and application">
    The processor analyzes the markup and passes structured information to an application. The specification places requirements on what an XML processor must do and not do, but the application is outside its scope. The processor (as the specification calls it) is often referred to colloquially as an XML parser.
 </bloc>
<bloc titre="Markup and content">
    The characters making up an XML document are divided into markup and content, which may be distinguished by the application of simple syntactic rules. Generally, strings that constitute markup either begin with the character &lt; and end with a &gt;, or they begin with the character &amp; and end with a ;. Strings of characters that are not markup are content. However, in a CDATA section, the delimiters &lt;![CDATA[ and ]]&gt; are classified as markup, while the text between them is classified as content. In addition, whitespace before and after the outermost element is classified as markup.
</bloc>
<bloc titre="Tag">
    A tag is a markup construct that begins with &lt; and ends with >. Tags come in three flavors:
        start-tag, such as &lt;section>;
        end-tag, such as &lt;/section>;
        empty-element tag, such as &lt;line-break />.
</bloc>
<bloc titre="Element">
    An element is a logical document component that either begins with a start-tag and ends with a matching end-tag or consists only of an empty-element tag. The characters between the start-tag and end-tag, if any, are the element's content, and may contain markup, including other elements, which are called child elements. An example is &lt;greeting>Hello, world!&lt;/greeting>. Another is &lt;line-break />.
</bloc>
<bloc titre="Attribute">
    An attribute is a markup construct consisting of a name–value pair that exists within a start-tag or empty-element tag. An example is &lt;img src="madonna.jpg" alt="Madonna" />, where the name of the attributes are "src" and "alt" and their values are "madonna.jpg" and "Madonna" respectively. Another example is &lt;step number="3">Connect A to B.&lt;/step>, where the name of the attribute is "number" and its value is "3". An XML attribute can only have a single value and each attribute can appear at most once on each element. In the common situation where a list of multiple values is desired, this must be done by encoding the list into a well-formed XML attribute with some format beyond what XML defines itself. Usually this is either a comma or semi-colon delimited list or, if the individual values are known not to contain spaces, a space-delimited list can be used. &lt;div class="inner greeting-box">Welcome!&lt;/div>, where the attribute "class" has both the value "inner greeting-box" and also indicates the two CSS class names "inner" and "greeting-box".
</bloc>
<bloc titre="XML declaration">
    XML documents may begin with an XML declaration that describes some information about themselves. An example is &lt;?xml version="1.0" encoding="UTF-8"?>. 
</bloc>
</paragraphe>
<paragraphe titre="Characters and escaping">
<bloc>
XML documents consist entirely of characters from the Unicode repertoire. Except for a small number of specifically excluded control characters, any character defined by Unicode may appear within the content of an XML document.
</bloc>
<bloc>
XML includes facilities for identifying the encoding of the Unicode characters that make up the document, and for expressing characters that, for one reason or another, cannot be used directly.
</bloc>
<bloc titre="Encoding detection">
The Unicode character set can be encoded into bytes for storage or transmission in a variety of different ways, called "encodings". Unicode itself defines encodings that cover the entire repertoire; well-known ones include UTF-8 and UTF-16.[12] There are many other text encodings that predate Unicode, such as ASCII and ISO/IEC 8859; their character repertoires in almost every case are subsets of the Unicode character set.
</bloc>
</paragraphe>
</page>

